{
  "openapi": "3.0.0",
  "info": {
    "title": "School",
    "description": "The School Management API is a robust and comprehensive backend system designed for educational institutions, developed using Node.js and Express.js. It centralizes various aspects of school management, such as administrative tasks, student information, blog updates, and more. A key feature is its strong user authentication system, providing secure login, signup, and password management. The API includes modules for diverse school activities, ranging from administration to blog and announcement management.\n\nIntegration with Google Drive is a significant aspect, enabling efficient file management across different modules. Security and compliance are prioritized, with advanced authentication, role-based access control, and adherence to data protection standards, ensuring the safety of sensitive information.\n\nThe APIs technology stack includes MongoDB, Bcrypt, CORS, Jsonwebtoken, Multer, Nodemailer, and Swagger, providing a comprehensive set of tools for database management, security, file handling, and documentation. The project is structured for easy development and maintenance, with clear directory organization and environment-specific configurations. Hosted on Vercel, it offers seamless deployment. Overall, the School Management API is a versatile and efficient solution for modern educational institutions, embodying both operational efficiency and technological advancement.",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://{{server_url}}"
    }
  ],
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      },
      "noauthAuth": {
        "type": "http",
        "scheme": "noauth"
      }
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "tags": [
    {
      "name": "api"
    },
    {
      "name": "api > v1",
      "description": "Sets up versioned routing for the administration module."
    },
    {
      "name": "api > v1 > administration",
      "description": "This module defines the routes for administration-related operations in the Express application. It includes endpoints for creating, retrieving, updating, and deleting administration posts. The routes are configured with necessary middleware for authentication, file uploading, and validation."
    },
    {
      "name": "api > v1 > admission",
      "description": "This module sets up routing for the admission-related features in an Express application. It imports and uses separate route handlers for different aspects of the admission process admission information and admission forms. The routes are structured under different base paths to organize the API endpoints logically. This module centralizes the admission-related routes and makes them accessible under a unified structure in the application's routing system."
    },
    {
      "name": "api > v1 > admission > form",
      "description": "This module defines routes for creating, retrieving, and deleting admission forms.\nIt includes middleware for authentication, file upload handling, and specific validations related to admission form operations."
    },
    {
      "name": "api > v1 > admission > information",
      "description": "This module defines the routes for admission information-related operations in the Express application. It includes endpoints for creating, retrieving, updating, and deleting admission information posts. The routes are configured with necessary middleware for authentication, file uploading, and validation. Swagger documentation annotations are also included to describe each endpoint, its expected parameters, and responses. This setup facilitates clear and organized handling of admission information-related requests, ensuring proper authentication, data validation, and response structuring."
    },
    {
      "name": "api > v1 > announcement",
      "description": "This module defines the routes for managing announcements in the system. It includes\nendpoints for creating, retrieving, updating, and deleting announcements."
    },
    {
      "name": "api > v1 > authentication",
      "description": "This module sets up the routing for authentication-related endpoints. It integrates\nmiddleware for validation, token authentication, and controllers for handling authentication operations like login, signup, password reset, and user verification. The routes are defined using the Express.js framework. Each route is associated with specific validation and controller methods to ensure proper request handling and business logic execution."
    },
    {
      "name": "api > v1 > blog",
      "description": "This module defines the routes for blog-related operations in the Express application.  \nIt includes endpoints for creating, retrieving, updating, and deleting blog posts.  \nThe routes are configured with necessary middleware for authentication, file uploading, and validation."
    },
    {
      "name": "api > v1 > category",
      "description": "This module sets up an Express router for handling various HTTP requests related to the 'Category' entity. It defines routes for creating, retrieving, updating, and deleting categories. Each route is configured with appropriate middleware for validation and authentication, ensuring that requests are processed correctly\nand securely."
    },
    {
      "name": "api > v1 > contact",
      "description": "This module sets up an Express router for handling HTTP POST requests related to sending emails. It defines a route for the email-sending functionality, including necessary validation of request data and handling the actual email sending process. The router uses a specific validator to ensure the integrity and correctness of the email-related data received in the request body."
    },
    {
      "name": "api > v1 > dashboard",
      "description": "This module configures the routing for dashboard-related features within an Express application. It incorporates routing for both details and summary organizing these under distinct base paths for clarity and ease of access."
    },
    {
      "name": "api > v1 > dashboard > details",
      "description": "This module sets up the Express router for the dashboard-related routes in the application. It includes endpoints for fetching system summaries and other dashboard-related data. The routes are secured with authentication middleware to ensure that only authenticated users can access them."
    },
    {
      "name": "api > v1 > dashboard > summary",
      "description": "This module sets up the Express router for the dashboard-related routes in the application. It includes endpoints for fetching system summaries and other dashboard-related data. The routes are secured with authentication middleware to ensure that only authenticated users can access them."
    },
    {
      "name": "api > v1 > designation",
      "description": "This route sets up the Express router for handling various endpoints related to Designations. It includes routes for creating a new designation, retrieving a list of all designations, retrieving a specific designation by ID, updating a designation, and deleting a designation."
    },
    {
      "name": "api > v1 > download",
      "description": "This routes for creating, retrieving, and deleting downloads.\nIt includes middleware for authentication, file upload handling, and specific validations related to download operations."
    },
    {
      "name": "api > v1 > gallery",
      "description": "This routing is for gallery-related features within an Express application. It incorporates routing for both photo and video galleries, organizing these under distinct base paths for clarity and ease of access."
    },
    {
      "name": "api > v1 > gallery > photoGallery",
      "description": "This module defines the routes for photo gallery-related operations in the Express application. It includes endpoints for creating, retrieving, updating, and deleting photo gallery posts. The routes are configured with necessary middleware for authentication, file uploading, and validation."
    },
    {
      "name": "api > v1 > gallery > videoGallery",
      "description": "This module defines the routes for video gallery-related operations in the Express application. It includes endpoints for creating, retrieving, updating, and deleting video gallery posts. The routes are configured with necessary middleware for authentication, file uploading, and validation."
    },
    {
      "name": "api > v1 > homePage",
      "description": "This route related to the homepage of the application, including routes for homepage posts and homepage carousels. It acts as a central point for aggregating all homepage-related routes and exposes them under a unified namespace."
    },
    {
      "name": "api > v1 > homePage > homePageCarousel",
      "description": "This module defines the routes for home page carousel-related operations in the Express application. It includes endpoints for creating, retrieving, updating, and deleting home page carousel-related posts. The routes are configured with necessary middleware for authentication, file uploading, and validation."
    },
    {
      "name": "api > v1 > homePage > homePagePost",
      "description": "This module defines the routes for home page post-related operations in the Express application. It includes endpoints for creating, retrieving, updating, and deleting home page posts. The routes are configured with necessary middleware for authentication, file uploading, and validation."
    },
    {
      "name": "api > v1 > level",
      "description": "This routes is for various operations related to 'levels', such as creating, retrieving, updating, and deleting levels. It includes routes for getting all levels, a specific level by ID, adding a new level, updating a level, and deleting a level."
    },
    {
      "name": "api > v1 > notice",
      "description": "This routes is for creating, retrieving, and deleting notices. It includes middleware for authentication, file upload handling, and specific validations related to notice operations."
    },
    {
      "name": "api > v1 > othersInformation",
      "description": "This module defines the routes for others information-related operations in the Express application. It includes endpoints for creating, retrieving, updating, and deleting others information posts. The routes are configured with necessary middleware for authentication, file uploading, and validation."
    },
    {
      "name": "api > v1 > othersInformationCategory",
      "description": "This router is for handling various HTTP requests related to the 'Others Information Category' entity. It defines routes for creating, retrieving, updating, and deleting categories. Each route is configured with appropriate middleware for validation and authentication, ensuring that requests are processed correctly and securely."
    },
    {
      "name": "api > v1 > result",
      "description": "This routes is for creating, retrieving, and deleting results. It includes middleware for authentication, file upload handling, and specific validations related to result operations."
    },
    {
      "name": "api > v1 > routine",
      "description": "This module defines routes for creating, retrieving, and deleting routines. It includes middleware for authentication, file upload handling, and specific validations related to routine operations."
    },
    {
      "name": "api > v1 > student",
      "description": "This routes is for student-related operations in the Express application. It includes endpoints for creating, retrieving, updating, and deleting student posts. The routes are configured with necessary middleware for authentication, file uploading, and validation."
    },
    {
      "name": "api > v1 > website",
      "description": "This routing is for various website-related features, such as website configuration, contact information, social media links, official links, and important information links. Each route is associated with a specific aspect of the website, thereby organizing the website functionalities into a structured and manageable format."
    },
    {
      "name": "api > v1 > website > banner",
      "description": "This module defines the routes for website banner-related operations in the Express application. It includes endpoints for creating, retrieving, and deleting website banner posts."
    },
    {
      "name": "api > v1 > website > configuration",
      "description": "This module sets up the Express router for handling routes related to website configuration. It includes routes for creating, retrieving, updating, and deleting the website configuration, along with the necessary middleware for authentication and file uploads."
    },
    {
      "name": "api > v1 > website > contact",
      "description": "Defines routes for handling website contact related operations like creating,\nretrieving, updating, and deleting website contact information."
    },
    {
      "name": "api > v1 > website > importantInformationLink",
      "description": "This file defines the routes for managing website important information links. It includes routes for creating, retrieving, updating, and deleting important information links. These routes are integrated with middleware for authentication, validation, and other necessary functionalities. The router handles different HTTP methods (POST, GET, PUT, DELETE) to support CRUD operations for important information links."
    },
    {
      "name": "api > v1 > website > officialLink",
      "description": "This file defines the routes for managing website important information links. It includes routes for creating, retrieving, updating, and deleting important information links. These routes are integrated with middleware for authentication, validation, and other necessary functionalities. The router handles different HTTP methods (POST, GET, PUT, DELETE) to support CRUD operations for important information links."
    },
    {
      "name": "api > v1 > website > socialMediaLink",
      "description": "This file defines the routes for managing website important information links. It includes routes for creating, retrieving, updating, and deleting important information links. These routes are integrated with middleware for authentication, validation, and other necessary functionalities. The router handles different HTTP methods (POST, GET, PUT, DELETE) to support CRUD operations for important information links."
    },
    {
      "name": "index",
      "description": "This router is to handle requests to the root (\"/\") endpoint of the application. It is responsible for directing these requests to the appropriate controller, in this case, the index controller. This endpoint serves as the entry point or index of the system, typically used to confirm that the server is operational."
    },
    {
      "name": "status"
    },
    {
      "name": "status > health",
      "description": "This route is for checking the health of the application. It combines configurations and constants from the respective modules and checks if any of these settings are undefined or null. The controller is used to verify the integrity and availability of necessary configurations and constants for the application's proper functionality. It serves as a diagnostic tool to quickly assess the operational status of the application."
    },
    {
      "name": "status > status",
      "description": "This file sets up the routes for checking the status and health of the application.  \nIt imports the express module to create a router, and then defines two routes:\n\n1. The root route (\"/\") - Checks the basic operational status of the server.\n    \n2. The health route (\"/health\") - Assesses the health of the system by verifying the integrity and availability of configurations and constants."
    },
    {
      "name": "test-uncaught-exception"
    },
    {
      "name": "undefined",
      "description": "This file creates an Express router that intercepts all requests not matched by other routes in the application. It redirects these requests to the undefined controller, which handles them appropriately by providing a standardized response. This is useful for catching and handling requests to non-existent endpoints in the application, ensuring that the application can gracefully handle such scenarios."
    }
  ],
  "paths": {
    "/api/{API_VERSION}/administration": {
      "post": {
        "tags": [
          "api > v1 > administration"
        ],
        "summary": "administration",
        "description": "\nThis API endpoint allows you to add administration details. It is an HTTP POST request that should be sent to `{{SERVER_URL}}/api/{{API_VERSION}}/administration`.\n\nThe request should include the following parameters:\n\n- `id` (string): The ID of the administration detail.\n- `name` (string): The name of the administration detail.\n- `category` (array of strings): The category/categories of the administration detail.\n- `designation` (string): The designation of the administration detail.\n- `googleDriveShareableLink` (string): The shareable link of the administration detail on Google Drive.\n- `downloadLink` (string): The download link of the administration detail.\n- `createdAt` (string): The creation date and time of the administration detail.\n\nExample Request:\n```\nPOST {{SERVER_URL}}/api/{{API_VERSION}}/administration\nContent-Type: application/json\n\n{\n  \"id\": \"123\",\n  \"name\": \"John Doe\",\n  \"category\": [\"Category 1\", \"Category 2\"],\n  \"designation\": \"Manager\",\n  \"googleDriveShareableLink\": \"https://drive.google.com/...\",\n  \"downloadLink\": \"https://example.com/...\",\n  \"createdAt\": \"2022-01-01T00:00:00Z\"\n}\n```\n\nThe response will have the following format:\n\n- `data` (object): Contains the details of the added administration.\n  - `id` (string): The ID of the administration detail.\n  - `name` (string): The name of the administration detail.\n  - `category` (array of strings): The category/categories of the administration detail.\n  - `designation` (string): The designation of the administration detail.\n  - `googleDriveShareableLink` (string): The shareable link of the administration detail on Google Drive.\n  - `downloadLink` (string): The download link of the administration detail.\n  - `createdAt` (string): The creation date and time of the administration detail.\n- `success` (boolean): Indicates whether the request was successful or not.\n- `status` (number): The status code of the response.\n- `message` (string): Any additional message related to the response.\n\nExample Response:\n```\n{\n  \"data\": {\n    \"id\": \"123\",\n    \"name\": \"John Doe\",\n    \"category\": [\"Category 1\", \"Category 2\"],\n    \"designation\": \"Manager\",\n    \"googleDriveShareableLink\": \"https://drive.google.com/...\",\n    \"downloadLink\": \"https://example.com/...\",\n    \"createdAt\": \"2022-01-01T00:00:00Z\"\n  },\n  \"success\": true,\n  \"status\": 0,\n  \"message\": \"\"\n}\n```\n",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "রশিদ রিদওয়ান 5"
                  },
                  "category": {
                    "type": "string",
                    "example": "শিক্ষকবৃন্দ"
                  },
                  "designation": {
                    "type": "string",
                    "example": "সহকারী শিক্ষক"
                  },
                  "image": {
                    "type": "string",
                    "format": "binary"
                  },
                  "sdsdsd": {
                    "type": "string",
                    "example": "sdsdsd"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "get": {
        "tags": [
          "api > v1 > administration"
        ],
        "summary": "administration?filterBy=options",
        "description": "This API endpoint is used to retrieve administration data based on a specific filter. The HTTP GET request is sent to the following URL: `{{SERVER_URL}}/api/{{API_VERSION}}/administration`.\n\nThe request includes the following query parameter:\n\n- `filterBy`: This parameter is used to specify the filter criteria for the administration data. In the last execution, the value of `filterBy` was set to \"পরিচালনা পরিষদ\".\n    \n\nThe response to this request has the following structure:\n\n- `data`: An array containing objects representing administration data. Each object includes the following properties:\n    - `_id`: The unique identifier of the administration data.\n    - `id`: An identifier for the administration data.\n    - `name`: The name of the administration data.\n    - `category`: An array of categories associated with the administration data.\n    - `designation`: The designation of the administration data.\n    - `googleDriveFileId`: The Google Drive file ID associated with the administration data.\n    - `googleDriveShareableLink`: The shareable link of the Google Drive file associated with the administration data.\n    - `downloadLink`: The download link for the administration data.\n    - `createdBy`: The user who created the administration data.\n    - `createdAt`: The timestamp indicating when the administration data was created.\n    - `modifiedAt`: The timestamp indicating when the administration data was last modified.\n    - `modifiedBy`: The user who last modified the administration data.\n- `success`: A boolean value indicating the success of the request. In the last execution, the value was `true`.\n- `status`: An integer representing the status of the request. In the last execution, the value was `0`.\n- `message`: A message associated with the request. In the last execution, the value was an empty string.\n    \n\nPlease note that the actual values of the properties in the response may vary depending on the specific administration data retrieved.",
        "parameters": [
          {
            "name": "filterBy",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "পরিচালনা পরিষদ"
          },
          {
            "name": "API_VERSION",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/api/{API_VERSION}/administration/administration-5db2e9": {
      "get": {
        "tags": [
          "api > v1 > administration"
        ],
        "summary": "administration/:administrationId",
        "description": "This API endpoint is used to retrieve administration details from the server. It sends an HTTP GET request to the URL `{{SERVER_URL}}/api/{{API_VERSION}}/administration/administration-5db2e9`.\n\nThe response from the last execution of this endpoint had a status code of 200, indicating a successful request. The response body contained the following data:\n\n``` json\n{\n  \"data\": {\n    \"id\": \"\",\n    \"name\": \"\",\n    \"category\": [\"\"],\n    \"designation\": \"\",\n    \"googleDriveShareableLink\": \"\",\n    \"downloadLink\": \"\",\n    \"createdAt\": \"\",\n    \"modifiedAt\": \"\"\n  },\n  \"success\": true,\n  \"status\": 0,\n  \"message\": \"\"\n}\n\n ```\n\nThe `data` field in the response contains the administration details, including the `id`, `name`, `category`, `designation`, `googleDriveShareableLink`, `downloadLink`, `createdAt`, and `modifiedAt` properties. The `success` field indicates whether the request was successful, and the `status` field provides additional status information. The `message` field can be used to display any relevant messages.\n\nPlease refer to the API documentation for more information on the specific properties and their meanings.",
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "put": {
        "tags": [
          "api > v1 > administration"
        ],
        "summary": "administration/:administrationId",
        "description": "This HTTP PUT request is used to update the administration details for a specific administration ID. The ID is provided in the URL path.\n\n### Request\n\n- Method: PUT\n- URL: `{{SERVER_URL}}/api/{{API_VERSION}}/administration/administration-5db2e9`\n    \n\n### Response\n\nThe response for this request has a status code of 200, indicating a successful execution. The response body contains the following properties:\n\n- `data`: An object containing the updated administration details. The properties of this object are as follows:\n    - `id`: The ID of the administration.\n    - `name`: The name of the administration.\n    - `category`: An array of categories associated with the administration.\n    - `designation`: The designation of the administration.\n    - `googleDriveShareableLink`: The shareable link for the administration on Google Drive.\n    - `downloadLink`: The download link for the administration.\n    - `createdAt`: The timestamp when the administration was created.\n    - `modifiedAt`: The timestamp when the administration was last modified.\n- `success`: A boolean value indicating the success of the request.\n- `status`: An integer representing the status of the response.\n- `message`: A message related to the response.\n    \n\nPlease note that the values for the properties `id`, `name`, `category`, `designation`, `googleDriveShareableLink`, `downloadLink`, `createdAt`, and `modifiedAt` will be specific to the administration being updated.",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "জান্নাতুন নাঈম 3"
                  },
                  "category": {
                    "type": "string",
                    "example": "শিক্ষকবৃন্দ, শিক্ষকবৃন্দ"
                  },
                  "designation": {
                    "type": "string",
                    "example": "কৃতি শিক্ষার্থী"
                  },
                  "image": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/api/{API_VERSION}/administration/administration-b73e51": {
      "delete": {
        "tags": [
          "api > v1 > administration"
        ],
        "summary": "administration/:administrationId",
        "description": "This API endpoint is used to delete an administration record. The HTTP DELETE request is sent to the URL `{{SERVER_URL}}/api/{{API_VERSION}}/administration/administration-b73e51`.\n\n### Request Parameters\n\nThis API does not require any request parameters.\n\n### Response\n\nThe API returns a JSON response with the following properties:\n\n- `data`: An empty object.\n- `success`: A boolean value indicating the success of the operation.\n- `status`: An integer representing the status code of the response. In this case, the status code is 404, indicating that the requested resource was not found.\n- `message`: An empty string.\n    \n\nPlease note that the response does not include any specific data related to the deleted administration record.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/api/{API_VERSION}/admission/form": {
      "post": {
        "tags": [
          "api > v1 > admission > form"
        ],
        "summary": "form",
        "description": "\nThis API endpoint allows you to submit an admission form. It is an HTTP POST request that should be made to `{{SERVER_URL}}/api/{{API_VERSION}}/admission/form`.\n\n### Request Parameters\nThe request should include the following parameters:\n- `data`: This parameter should contain the admission form data. Please refer to the API documentation for the required format and fields.\n\n### Response\nThe response will have the following properties:\n- `data`: This property will contain the response data. In this case, it is an empty object (`{}`).\n- `success`: This property indicates whether the request was successful or not. In the last execution, it was `true`.\n- `status`: This property represents the status code of the response. In the last execution, it was `0`.\n- `message`: This property provides additional information or error messages. In the last execution, it was an empty string (`\"\"`).\n\nPlease note that the response status code in the last execution was `400`, which indicates a client error. Make sure to check the request parameters and ensure they are valid.\n\n",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "example": "১ম সাময়িকি পরীক্ষার রুটিন ডাউনলোড"
                  },
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "get": {
        "tags": [
          "api > v1 > admission > form"
        ],
        "summary": "form",
        "description": "This API endpoint is used to retrieve the admission forms. It sends an HTTP GET request to the specified URL: `{{SERVER_URL}}/api/{{API_VERSION}}/admission/form`.\n\nThe response returned by the last execution of this request had a status code of 200, indicating a successful response. The response body contained a JSON object with the following properties:\n\n- `data` (array): An array of admission form objects. Each object has the following properties:\n    - `id` (string): The unique identifier of the form.\n    - `title` (string): The title or name of the form.\n    - `fileName` (string): The name of the file associated with the form.\n    - `googleDriveShareableLink` (string): The shareable link to the form file on Google Drive.\n    - `createdAt` (string): The timestamp indicating when the form was created.\n- `success` (boolean): A flag indicating whether the request was successful or not. In this case, it is set to `true`, indicating a successful request.\n- `status` (number): An additional status code. In this case, it is set to 0.\n- `message` (string): A message associated with the response. In this case, it is an empty string.\n    \n\nPlease note that the actual values of the `id`, `title`, `fileName`, `googleDriveShareableLink`, and `createdAt` properties may vary in each response.\n\nTo use this API endpoint, send an HTTP GET request to the specified URL. No request parameters are required.\n\nExample:\n\n```\nGET {{SERVER_URL}}/api/{{API_VERSION}}/admission/form\n\n ```\n\nThis will retrieve the admission forms and return a JSON response with the form details.",
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/api/{API_VERSION}/admission/form/ABID HASAN CV.pdf": {
      "get": {
        "tags": [
          "api > v1 > admission > form"
        ],
        "summary": "download/:fileName",
        "description": "This API endpoint is used to retrieve the details of an admission form with the filename \"ABID HASAN CV.pdf\". It is an HTTP GET request that should be made to the following URL: `{{SERVER_URL}}/api/{{API_VERSION}}/admission/form/ABID HASAN CV.pdf`.\n\n### Request Parameters\n\nThis endpoint does not require any request parameters.\n\n### Response\n\nThe last execution of this request returned a response with the following details:\n\n- Status: 200\n- Body:\n    \n    ``` json\n    {\n      \"data\": {\n          \"id\": \"\",\n          \"title\": \"\",\n          \"fileName\": \"\",\n          \"googleDriveShareableLink\": \"\",\n          \"downloadLink\": \"\",\n          \"createdAt\": \"\"\n      },\n      \"success\": true,\n      \"status\": 0,\n      \"message\": \"\"\n    }\n    \n     ```\n    \n\nThe response body contains the details of the admission form with the filename \"ABID HASAN CV.pdf\". The `data` object includes the following properties:\n\n- `id`: The unique identifier of the admission form.\n- `title`: The title of the admission form.\n- `fileName`: The name of the admission form file.\n- `googleDriveShareableLink`: The shareable link of the admission form on Google Drive.\n- `downloadLink`: The download link of the admission form.\n- `createdAt`: The timestamp indicating when the admission form was created.\n    \n\nPlease note that the values for the properties in the response body will vary based on the specific admission form.\n\nIf the request is successful, the `success` property will be `true` and the `status` property will be `0`. The `message` property will be empty.\n\nIf you have any further questions or need assistance, please feel free to reach out.",
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "delete": {
        "tags": [
          "api > v1 > admission > form"
        ],
        "summary": "download/:fileName",
        "description": "This API endpoint is used to delete an admission form with the filename \"ABID HASAN CV.pdf\".\n\nTo delete the admission form, send an HTTP DELETE request to the following URL:\n\n```\n{{SERVER_URL}}/api/{{API_VERSION}}/admission/form/ABID HASAN CV.pdf\n\n ```\n\nThe request does not require any additional parameters.\n\n### Response\n\nThe API will respond with a status code of 200 if the deletion is successful. The response body will contain the following JSON data:\n\n``` json\n{\n  \"data\": {},\n  \"success\": true,\n  \"status\": 0,\n  \"message\": \"\"\n}\n\n ```\n\nThe `data` field will be an empty object, indicating that no specific data is returned for this operation. The `success` field will be `true`, indicating that the deletion was successful. The `status` field will be `0`, indicating a successful operation. The `message` field will be an empty string, indicating that no additional message is provided.\n\nPlease note that the filename \"ABID HASAN CV.pdf\" is specific to this example and should be replaced with the actual filename of the admission form you want to delete.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/api/{API_VERSION}/admission/information": {
      "post": {
        "tags": [
          "api > v1 > admission > information"
        ],
        "summary": "information",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "title": "ভর্তি তথ্য",
                  "description": "এতদ্বারা জানানো যাচ্ছে যে, আগামী ১৩.১২.২০১৮ইং তারিখে ডেমো হাইস্কুল এন্ড কলেজের নবম শ্রেণীতে নতুন ছাত্রছাত্রীদের ভর্তি করা হবে। যারা জেএসসি পরীক্ষায় ২.০ পেয়েছে কেবল তারাই আবেদন করতে পারবে। আগ্রহীরা ওয়েবসাইট থেকে ফরম ডাউনলোড করে পূরণ করে্আমাদের ই-মেইলে অথবা সরাসরি আমাদের অফিসে জমা দেয়ার জন্য বলা হলো।",
                  "formPrice": "২০০ টাকা",
                  "admissionFee": "২০০০ টাকা",
                  "lastFormSubmissionData": "15/12/2024",
                  "contact": "মো: কামরুল ইসলাম, প্রিন্সিপাল, ডোমো সরকারী হাইস্কুল এন্ড কলেজ, চুনারুঘাট সদর, চুনারুঘাট, হবিগঞ্জ।"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "get": {
        "tags": [
          "api > v1 > admission > information"
        ],
        "summary": "information",
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/api/{API_VERSION}/admission/information/admissionInformation-46ce3b": {
      "get": {
        "tags": [
          "api > v1 > admission > information"
        ],
        "summary": "information/:admissionInformationId",
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "delete": {
        "tags": [
          "api > v1 > admission > information"
        ],
        "summary": "information/:admissionInformationId",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/api/{API_VERSION}/admission/Information/admissionInformation-cbe556": {
      "put": {
        "tags": [
          "api > v1 > admission > information"
        ],
        "summary": "information/:admissionInformationId",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "title": "ভর্তি তথ্য 2",
                  "description": "এতদ্বারা জানানো যাচ্ছে যে, আগামী ১৩.১২.২০১৮ইং তারিখে ডেমো হাইস্কুল এন্ড কলেজের নবম শ্রেণীতে নতুন ছাত্রছাত্রীদের ভর্তি করা হবে। যারা জেএসসি পরীক্ষায় ২.০ পেয়েছে কেবল তারাই আবেদন করতে পারবে। আগ্রহীরা ওয়েবসাইট থেকে ফরম ডাউনলোড করে পূরণ করে্আমাদের ই-মেইলে অথবা সরাসরি আমাদের অফিসে জমা দেয়ার জন্য বলা হলো।",
                  "formPrice": "২০০০ টাকা",
                  "admissionFee": "২০০০ টাকা",
                  "lastFormSubmissionData": "15/12/2024"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/api/{API_VERSION}/announcement": {
      "post": {
        "tags": [
          "api > v1 > announcement"
        ],
        "summary": "announcement",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "name": "এই ওয়েবসাইট বিক্রি করা হবে ।"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "get": {
        "tags": [
          "api > v1 > announcement"
        ],
        "summary": "announcement",
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/api/{API_VERSION}/announcement/announcement-ba4a73": {
      "get": {
        "tags": [
          "api > v1 > announcement"
        ],
        "summary": "announcement/:announcementId",
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "put": {
        "tags": [
          "api > v1 > announcement"
        ],
        "summary": "announcement/:announcementId",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "name": "শিক্ষকবৃন্দ"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "delete": {
        "tags": [
          "api > v1 > announcement"
        ],
        "summary": "announcement/:announcementId",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/api/{API_VERSION}/authentication/login": {
      "post": {
        "tags": [
          "api > v1 > authentication"
        ],
        "summary": "login",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "userName": "montasim",
                  "password": "Qweqwe@1234"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/api/{API_VERSION}/authentication/verify-user": {
      "get": {
        "tags": [
          "api > v1 > authentication"
        ],
        "summary": "verify-user",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/api/{API_VERSION}/authentication/signup": {
      "post": {
        "tags": [
          "api > v1 > authentication"
        ],
        "summary": "signup",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "name": "montasim",
                  "userName": "montasim",
                  "password": "Qweqwe@1234",
                  "confirmPassword": "Qweqwe@1234"
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/api/{API_VERSION}/authentication/reset-password": {
      "put": {
        "tags": [
          "api > v1 > authentication"
        ],
        "summary": "reset-password",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "oldPassword": "password",
                  "newPassword": "password1",
                  "confirmNewPassword": "password1"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/api/{API_VERSION}/authentication/logout": {
      "get": {
        "tags": [
          "api > v1 > authentication"
        ],
        "summary": "logout",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/api/{API_VERSION}/authentication/delete-user": {
      "delete": {
        "tags": [
          "api > v1 > authentication"
        ],
        "summary": "delete-user",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/api/{API_VERSION}/blog": {
      "post": {
        "tags": [
          "api > v1 > blog"
        ],
        "summary": "blog",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "example": "প্রতিষ্ঠানের ইতিহাস"
                  },
                  "category": {
                    "type": "string",
                    "example": "প্রতিষ্ঠানের ইতিহাস"
                  },
                  "blogImage": {
                    "type": "string",
                    "format": "binary"
                  },
                  "description": {
                    "type": "string",
                    "example": "সুনামগঞ্জ জেলাধীন জগন্নাথপুরস্থ এক প্রাচীন জনপদের নাম ইসহাকপুর । এ গ্রামের সম্ভ্রান্ত ধর্মভীরু মুসলিম পরিবার সমূহের মধ্যে শীর্ষস্থানে অবস্থান খান পরিবারের । বংশমর্যাদায় যেমন শ্রেষ্ঠত্বের দাবীদার তেমনি শিক্ষা-দীক্ষায়, ধর্মভীরুতায়.সামাজিক আচার-অনুষ্ঠানে এ জনপদের অন্য সবের উপর রয়েছে এ পরিবারের অতুলনীয় সম্মান। যতদূর জানা যায় মরহুম দেলওয়ার খান ছিলেন এ পরিবারের একজন শিক্ষিত ব্যক্তি ।"
                  },
                  "asaas": {
                    "type": "string",
                    "example": "asas"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "get": {
        "tags": [
          "api > v1 > blog"
        ],
        "summary": "blog",
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/api/{API_VERSION}/blog/blogPost-659c75": {
      "get": {
        "tags": [
          "api > v1 > blog"
        ],
        "summary": "blog/:blogId",
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/api/{API_VERSION}/blog/blogPost-2de55e": {
      "put": {
        "tags": [
          "api > v1 > blog"
        ],
        "summary": "blog/:blogId",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "example": "প্রতিষ্ঠানের ইতিহাস 4"
                  },
                  "category": {
                    "type": "string",
                    "example": "প্রতিষ্ঠানের ইতিহাস"
                  },
                  "blogImage": {
                    "type": "string",
                    "format": "binary"
                  },
                  "description": {
                    "type": "string",
                    "example": "সুনামগঞ্জ জেলাধীন জগন্নাথপুরস্থ এক প্রাচীন জনপদের নাম ইসহাকপুর । এ গ্রামের সম্ভ্রান্ত ধর্মভীরু মুসলিম পরিবার সমূহের মধ্যে শীর্ষস্থানে অবস্থান খান পরিবারের । বংশমর্যাদায় যেমন শ্রেষ্ঠত্বের দাবীদার তেমনি শিক্ষা-দীক্ষায়, ধর্মভীরুতায়.সামাজিক আচার-অনুষ্ঠানে এ জনপদের অন্য সবের উপর রয়েছে এ পরিবারের অতুলনীয় সম্মান। যতদূর জানা যায় মরহুম দেলওয়ার খান ছিলেন এ পরিবারের একজন শিক্ষিত ব্যক্তি ।"
                  },
                  "sdsds": {
                    "type": "string",
                    "example": "dsds"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/api/{API_VERSION}/blog/blogPost-67dc58": {
      "delete": {
        "tags": [
          "api > v1 > blog"
        ],
        "summary": "blog/:blogId",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/api/{API_VERSION}/category": {
      "post": {
        "tags": [
          "api > v1 > category"
        ],
        "summary": "category",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "name": "কৃতি শিক্ষার্থী1212"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "get": {
        "tags": [
          "api > v1 > category"
        ],
        "summary": "category",
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/api/{API_VERSION}/category/category-9ad3b": {
      "get": {
        "tags": [
          "api > v1 > category"
        ],
        "summary": "category/:categoryId",
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/api/{API_VERSION}/category/category-49490d": {
      "put": {
        "tags": [
          "api > v1 > category"
        ],
        "summary": "category/:categoryId",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "name": "শিক্ষকবৃন্দ"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/api/{API_VERSION}/category/category-ff98e7": {
      "delete": {
        "tags": [
          "api > v1 > category"
        ],
        "summary": "category/:categoryId",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/api/{API_VERSION}/contact/send-email": {
      "post": {
        "tags": [
          "api > v1 > contact"
        ],
        "summary": "send-email",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "firstName": "Montasim",
                  "lastName": "Mamun",
                  "phone": "01722815469",
                  "email": "montasimmamun@gmail.com",
                  "subject": "Test message subject",
                  "message": "This is a test message to test the send-email functionality."
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/api/{API_VERSION}/dashboard/details": {
      "get": {
        "tags": [
          "api > v1 > dashboard > details"
        ],
        "summary": "details?for=options",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "for",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "level"
          },
          {
            "name": "API_VERSION",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/api/{API_VERSION}/dashboard/summary": {
      "get": {
        "tags": [
          "api > v1 > dashboard > summary"
        ],
        "summary": "summary?for=options",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "for",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "student"
          },
          {
            "name": "API_VERSION",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/api/{API_VERSION}/designation": {
      "post": {
        "tags": [
          "api > v1 > designation"
        ],
        "summary": "designation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "name": "শিক্ষার্থী"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "get": {
        "tags": [
          "api > v1 > designation"
        ],
        "summary": "designation",
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/api/{API_VERSION}/designation/designation-b74a50": {
      "get": {
        "tags": [
          "api > v1 > designation"
        ],
        "summary": "designation/:designationId",
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/api/{API_VERSION}/designation/designation-0c911c": {
      "put": {
        "tags": [
          "api > v1 > designation"
        ],
        "summary": "designation/:designationId",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "name": "শিক্ষক 2"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/api/{API_VERSION}/designation/designation-348424": {
      "delete": {
        "tags": [
          "api > v1 > designation"
        ],
        "summary": "designation/:designationId",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/api/{API_VERSION}/download": {
      "post": {
        "tags": [
          "api > v1 > download"
        ],
        "summary": "download",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "example": "১ম সাময়িকি পরীক্ষার রুটিন ডাউনলোড"
                  },
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "get": {
        "tags": [
          "api > v1 > download"
        ],
        "summary": "download",
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/api/{API_VERSION}/download/ABID HASAN CV.pdf": {
      "get": {
        "tags": [
          "api > v1 > download"
        ],
        "summary": "download/:fileName",
        "security": [
          {
            "noauthAuth": []
          }
        ],
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/api/{API_VERSION}/download/Google Project Management Certificate.pdf": {
      "delete": {
        "tags": [
          "api > v1 > download"
        ],
        "summary": "download/:fileName",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/api/{API_VERSION}/gallery/photoGallery": {
      "post": {
        "tags": [
          "api > v1 > gallery > photoGallery"
        ],
        "summary": "photoGallery",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "example": "home Page Carousel image "
                  },
                  "galleryImage": {
                    "type": "string",
                    "format": "binary"
                  },
                  "dsdsd": {
                    "type": "string",
                    "example": "a"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "get": {
        "tags": [
          "api > v1 > gallery > photoGallery"
        ],
        "summary": "photoGallery",
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/api/{API_VERSION}/gallery/photoGallery/photoGallery-1bc95a": {
      "get": {
        "tags": [
          "api > v1 > gallery > photoGallery"
        ],
        "summary": "photoGallery",
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "delete": {
        "tags": [
          "api > v1 > gallery > photoGallery"
        ],
        "summary": "photoGallery",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/api/{API_VERSION}/gallery/videoGallery": {
      "post": {
        "tags": [
          "api > v1 > gallery > videoGallery"
        ],
        "summary": "videoGallery",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "example": "home Page Carousel image "
                  },
                  "galleryVideo": {
                    "type": "string",
                    "format": "binary"
                  },
                  "sasa": {
                    "type": "string",
                    "example": "aaaa"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "get": {
        "tags": [
          "api > v1 > gallery > videoGallery"
        ],
        "summary": "videoGallery",
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/api/{API_VERSION}/gallery/videoGallery/videoGallery-31a87a": {
      "get": {
        "tags": [
          "api > v1 > gallery > videoGallery"
        ],
        "summary": "videoGallery",
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "delete": {
        "tags": [
          "api > v1 > gallery > videoGallery"
        ],
        "summary": "videoGallery",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/api/{API_VERSION}/homePage/homePageCarousel": {
      "post": {
        "tags": [
          "api > v1 > homePage > homePageCarousel"
        ],
        "summary": "homePageCarousel",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "example": "Carousel image "
                  },
                  "carouselImage": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "get": {
        "tags": [
          "api > v1 > homePage > homePageCarousel"
        ],
        "summary": "homePageCarousel",
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/api/{API_VERSION}/homePage/homePageCarousel/homePageCarousel-b018ed": {
      "get": {
        "tags": [
          "api > v1 > homePage > homePageCarousel"
        ],
        "summary": "homePageCarousel/:homePageCarouselId",
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/api/{API_VERSION}/homePage/homePageCarousel/undefined-ab1087": {
      "delete": {
        "tags": [
          "api > v1 > homePage > homePageCarousel"
        ],
        "summary": "homePageCarousel/:homePageCarouselId",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/api/{API_VERSION}/homePage/homePagePost": {
      "post": {
        "tags": [
          "api > v1 > homePage > homePagePost"
        ],
        "summary": "homePagePost",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "example": "প্রতিষ্ঠানের ইতিহাস"
                  },
                  "category": {
                    "type": "string",
                    "example": "প্রতিষ্ঠানের ইতিহাস"
                  },
                  "postImage": {
                    "type": "string",
                    "format": "binary"
                  },
                  "description": {
                    "type": "string",
                    "example": "বাংলাদেশের শিক্ষা ব্যবস্থার একটি পূর্ণাঙ্গ ধারা মাদরাসা শিক্ষা। সাধারণ শিক্ষার পাশপাশি সমান্তরালভাবে এটি বয়ে চলেছে দীর্ঘদিন ধরে এবং এ দেশের জন-মানসে তার স্থান করে নিয়েছে সুরক্ষিত ও সুদৃঢ়ভাবে। ধর্মীয় শিক্ষা ও জাগতিক শিক্ষা দুটি পরস্পরের পরিপুরক। এ সমন্বিত ইসলামী শিক্ষা ব্যবস্থার প্রতিষ্ঠানিক রুপই হচ্ছে মাদরাসা শিক্ষা। ইহলৌকিক উন্নতির সাথে সাথে পারলৌকিক মুক্তির পথ দেখাতেই প্রতিষ্ঠা"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "get": {
        "tags": [
          "api > v1 > homePage > homePagePost"
        ],
        "summary": "homePagePost",
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/api/{API_VERSION}/homePage/homePagePost/homePagePost-db76b9": {
      "get": {
        "tags": [
          "api > v1 > homePage > homePagePost"
        ],
        "summary": "homePagePost/:homePagePostId",
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "put": {
        "tags": [
          "api > v1 > homePage > homePagePost"
        ],
        "summary": "homePagePost/:homePagePostId",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "example": "অধ্যক্ষের বাণী 222"
                  },
                  "category": {
                    "type": "string",
                    "example": "অধ্যক্ষের বাণী"
                  },
                  "postImage": {
                    "type": "string",
                    "format": "binary"
                  },
                  "description": {
                    "type": "string",
                    "example": "বাংলাদেশের শিক্ষা ব্যবস্থার একটি পূর্ণাঙ্গ ধারা মাদরাসা শিক্ষা। সাধারণ শিক্ষার পাশপাশি সমান্তরালভাবে এটি বয়ে চলেছে দীর্ঘদিন ধরে এবং এ দেশের জন-মানসে তার স্থান করে নিয়েছে সুরক্ষিত ও সুদৃঢ়ভাবে। ধর্মীয় শিক্ষা ও জাগতিক শিক্ষা দুটি পরস্পরের পরিপুরক। এ সমন্বিত ইসলামী শিক্ষা ব্যবস্থার প্রতিষ্ঠানিক রুপই হচ্ছে মাদরাসা শিক্ষা। ইহলৌকিক উন্নতির সাথে সাথে পারলৌকিক মুক্তির পথ দেখাতেই প্রতিষ্ঠা"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/api/{API_VERSION}/homePage/homePagePost/homePagePost-c3a97c": {
      "delete": {
        "tags": [
          "api > v1 > homePage > homePagePost"
        ],
        "summary": "homePagePost/:homePagePostId",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/api/{API_VERSION}/level": {
      "post": {
        "tags": [
          "api > v1 > level"
        ],
        "summary": "level",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "name": "দ্বাদশ শ্রেণী"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "get": {
        "tags": [
          "api > v1 > level"
        ],
        "summary": "level",
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/api/{API_VERSION}/level/undefined-19d467": {
      "get": {
        "tags": [
          "api > v1 > level"
        ],
        "summary": "level/:levelId",
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "put": {
        "tags": [
          "api > v1 > level"
        ],
        "summary": "level/:levelId",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "name": "৯ম শ্রেণী"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/api/{API_VERSION}/level/designation-471ece": {
      "delete": {
        "tags": [
          "api > v1 > level"
        ],
        "summary": "level/:levelId",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/api/{API_VERSION}/notice": {
      "post": {
        "tags": [
          "api > v1 > notice"
        ],
        "summary": "notice",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "example": "test"
                  },
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "get": {
        "tags": [
          "api > v1 > notice"
        ],
        "summary": "notice",
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/api/{API_VERSION}/notice/tem.pdf": {
      "get": {
        "tags": [
          "api > v1 > notice"
        ],
        "summary": "notice/:fileName",
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/api/{API_VERSION}/notice/test notice.pdf": {
      "delete": {
        "tags": [
          "api > v1 > notice"
        ],
        "summary": "notice/:fileName",
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/api/{API_VERSION}/othersInformation": {
      "post": {
        "tags": [
          "api > v1 > othersInformation"
        ],
        "summary": "othersInformation",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "title": "ভর্তি তথ্য",
                  "category": "ভর্তি তথ্য",
                  "description": "এতদ্বারা জানানো যাচ্ছে যে, আগামী ১৩.১২.২০১৮ইং তারিখে ডেমো হাইস্কুল এন্ড কলেজের নবম শ্রেণীতে নতুন ছাত্রছাত্রীদের ভর্তি করা হবে। যারা জেএসসি পরীক্ষায় ২.০ পেয়েছে কেবল তারাই আবেদন করতে পারবে। আগ্রহীরা ওয়েবসাইট থেকে ফরম ডাউনলোড করে পূরণ করে্আমাদের ই-মেইলে অথবা সরাসরি আমাদের অফিসে জমা দেয়ার জন্য বলা হলো। ফরম মূল্য : ২০০ টাকা ভর্তি ফি : ২০০০ টাকা মো: কামরুল ইসলাম প্রিন্সিপাল ডোমো সরকারী হাইস্কুল এন্ড কলেজ চুনারুঘাট সদর, চুনারুঘাট, হবিগঞ্জ।"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "get": {
        "tags": [
          "api > v1 > othersInformation"
        ],
        "summary": "othersInformation",
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/api/{API_VERSION}/othersInformation/othersInformation-cccb41": {
      "get": {
        "tags": [
          "api > v1 > othersInformation"
        ],
        "summary": "othersInformation/:othersInformationId",
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "delete": {
        "tags": [
          "api > v1 > othersInformation"
        ],
        "summary": "othersInformation/:othersInformationId",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/api/{API_VERSION}/othersInformation/othersInformation-fccb1b": {
      "put": {
        "tags": [
          "api > v1 > othersInformation"
        ],
        "summary": "othersInformation/:othersInformationId",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "title": "asdsds"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/api/{API_VERSION}/othersInformationCategory": {
      "post": {
        "tags": [
          "api > v1 > othersInformationCategory"
        ],
        "summary": "othersInformationCategory",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "name": "পরিচালনা পরিষদ  sdsdsdsd"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "get": {
        "tags": [
          "api > v1 > othersInformationCategory"
        ],
        "summary": "othersInformationCategory",
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/api/{API_VERSION}/othersInformationCategory/othersInformationCategory-2eacd6": {
      "get": {
        "tags": [
          "api > v1 > othersInformationCategory"
        ],
        "summary": "othersInformationCategory/:othersInformationCategoryId",
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "put": {
        "tags": [
          "api > v1 > othersInformationCategory"
        ],
        "summary": "othersInformationCategory/:othersInformationCategoryId",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "name": "শিক্ষকবৃন্দ as"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "delete": {
        "tags": [
          "api > v1 > othersInformationCategory"
        ],
        "summary": "othersInformationCategory/:othersInformationCategoryId",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/api/{API_VERSION}/result": {
      "post": {
        "tags": [
          "api > v1 > result"
        ],
        "summary": "result",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "example": "test"
                  },
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "get": {
        "tags": [
          "api > v1 > result"
        ],
        "summary": "result",
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/api/{API_VERSION}/result/test result.pdf": {
      "get": {
        "tags": [
          "api > v1 > result"
        ],
        "summary": "result/:fileName",
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "delete": {
        "tags": [
          "api > v1 > result"
        ],
        "summary": "result/:fileName",
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/api/{API_VERSION}/routine": {
      "post": {
        "tags": [
          "api > v1 > routine"
        ],
        "summary": "routine",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "example": "testsscsc"
                  },
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "get": {
        "tags": [
          "api > v1 > routine"
        ],
        "summary": "routine",
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/api/{API_VERSION}/routine/test routine.pdf": {
      "get": {
        "tags": [
          "api > v1 > routine"
        ],
        "summary": "routine/:fileName",
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "delete": {
        "tags": [
          "api > v1 > routine"
        ],
        "summary": "routine/:fileName",
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/api/{API_VERSION}/student": {
      "post": {
        "tags": [
          "api > v1 > student"
        ],
        "summary": "student",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "মো: রফিকুল আমিন"
                  },
                  "level": {
                    "type": "string",
                    "example": "১০ম শ্রেণী"
                  },
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "get": {
        "tags": [
          "api > v1 > student"
        ],
        "summary": "student?filterBy=১০ম শ্রেণী",
        "parameters": [
          {
            "name": "filterBy",
            "in": "query",
            "schema": {
              "type": "string"
            },
            "example": "৭ম শ্রেণী"
          },
          {
            "name": "API_VERSION",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/api/{API_VERSION}/student/student-81cc76": {
      "get": {
        "tags": [
          "api > v1 > student"
        ],
        "summary": "student/:studentId",
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/api/{API_VERSION}/student/student-e5163c": {
      "put": {
        "tags": [
          "api > v1 > student"
        ],
        "summary": "student/:studentId",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "মো: রফিকুল আমিন"
                  },
                  "level": {
                    "type": "string",
                    "example": "১০ম শ্রেণী"
                  },
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/api/{API_VERSION}/student/student-3810a3": {
      "delete": {
        "tags": [
          "api > v1 > student"
        ],
        "summary": "student/:studentId",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/api/{API_VERSION}/website/banner": {
      "post": {
        "tags": [
          "api > v1 > website > banner"
        ],
        "summary": "banner",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "websiteBannerImage": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "get": {
        "tags": [
          "api > v1 > website > banner"
        ],
        "summary": "banner",
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "delete": {
        "tags": [
          "api > v1 > website > banner"
        ],
        "summary": "banner",
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/api/{API_VERSION}/website/configuration": {
      "post": {
        "tags": [
          "api > v1 > website > configuration"
        ],
        "summary": "configuration",
        "description": "\nThis endpoint allows developers to create a new website.\n\n#### Request Parameters\n\nThe request must include a JSON object in the request body. The JSON object should have the following properties:\n\n| Parameter | Type | Description |\n| --- | --- | --- |\n| name | String | The name of the website |\n| url | String | The URL of the website |\n| description | String | A description of the website |\n\n#### Response Fields\n\nIn the event of a successful request, the response will contain the following fields:\n\n| Parameter | Type | Description |\n| --- | --- | --- |\n| data | Object | An empty object |\n| success | Boolean | Indicates whether the request was successful |\n| status | Integer | The status code of the response |\n| message | String | A message indicating the result of the request |\n\nIn the event of an error, the response will contain the following fields:\n\n| Parameter | Type | Description |\n| --- | --- | --- |\n| data | Object | An empty object |\n| success | Boolean | Indicates whether the request was successful |\n| status | Integer | The status code of the response |\n| message | String | A message indicating the result of the request |\n\nThe status code 422 indicates that the request was unable to be processed due to invalid input data.\n",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "ডেমো সরকারী স্কুল এন্ড কলেজ"
                  },
                  "slogan": {
                    "type": "string",
                    "example": "Website Slogan"
                  },
                  "websiteLogo": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "get": {
        "tags": [
          "api > v1 > website > configuration"
        ],
        "summary": "configuration",
        "description": "\nThis endpoint allows developers to retrieve information about a website.\n\n#### Request Parameters\n\nThere are no request parameters for this endpoint.\n\n#### Response Fields\n\nIn the event of a successful request, the response will contain a 'data' array with the website information. Each website object will contain the following fields:\n\n| Parameter | Type | Description |\n| --- | --- | --- |\n| id | String | Unique identifier of the website |\n| name | String | Name of the website |\n| slogan | String | Slogan of the website |\n| contact | Object | Contact information for the website |\n| socialMediaLinks | Object | Social media links for the website |\n| officialLinks | Array | Array of official links for the website |\n| importantInformationLinks | Array | Array of important information links for the website |\n| createdAt | String | Timestamp of when the website was created |\n\nThe response will also contain the following fields:\n\n| Parameter | Type | Description |\n| --- | --- | --- |\n| success | Boolean | Indicates if the request was successful |\n| status | Integer | Status code of the response |\n| message | String | Additional message related to the response |\n\nIn the event of an error, the response will contain an 'error' object with a 'message' field describing the error.\n",
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "put": {
        "tags": [
          "api > v1 > website > configuration"
        ],
        "summary": "configuration",
        "description": "\nThis endpoint allows developers to create a new website.\n\n#### Request Parameters\n\nThe request must include a JSON object in the request body. The JSON object should have the following properties:\n\n| Parameter | Type | Description |\n| --- | --- | --- |\n| name | String | The name of the website |\n| url | String | The URL of the website |\n| description | String | A description of the website |\n\n#### Response Fields\n\nIn the event of a successful request, the response will contain the following fields:\n\n| Parameter | Type | Description |\n| --- | --- | --- |\n| data | Object | An empty object |\n| success | Boolean | Indicates whether the request was successful |\n| status | Integer | The status code of the response |\n| message | String | A message indicating the result of the request |\n\nIn the event of an error, the response will contain the following fields:\n\n| Parameter | Type | Description |\n| --- | --- | --- |\n| data | Object | An empty object |\n| success | Boolean | Indicates whether the request was successful |\n| status | Integer | The status code of the response |\n| message | String | A message indicating the result of the request |\n\nThe status code 422 indicates that the request was unable to be processed due to invalid input data.\n",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "ডেমো সরকারী স্কুল এন্ড কলেজ"
                  },
                  "slogan": {
                    "type": "string",
                    "example": "Website Slogan"
                  },
                  "websiteLogo": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "delete": {
        "tags": [
          "api > v1 > website > configuration"
        ],
        "summary": "configuration",
        "description": "\nThis endpoint allows developers to delete a website.\n\n#### Response Fields\n\nIn the event of a successful request, the response will contain the following fields:\n\n| Field | Type | Description |\n| --- | --- | --- |\n| data | Object | An empty object |\n| success | Boolean | Indicates if the request was successful |\n| status | Integer | Status code of the request |\n| message | String | A message associated with the request |\n\n",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/api/{API_VERSION}/website/contact": {
      "post": {
        "tags": [
          "api > v1 > website > contact"
        ],
        "summary": "contact",
        "description": "\nThis endpoint allows developers to create a new website.\n\n#### Request Parameters\n\nThe request must include a JSON object in the request body. The JSON object should have the following properties:\n\n| Parameter | Type | Description |\n| --- | --- | --- |\n| name | String | The name of the website |\n| url | String | The URL of the website |\n| description | String | A description of the website |\n\n#### Response Fields\n\nIn the event of a successful request, the response will contain the following fields:\n\n| Parameter | Type | Description |\n| --- | --- | --- |\n| data | Object | An empty object |\n| success | Boolean | Indicates whether the request was successful |\n| status | Integer | The status code of the response |\n| message | String | A message indicating the result of the request |\n\nIn the event of an error, the response will contain the following fields:\n\n| Parameter | Type | Description |\n| --- | --- | --- |\n| data | Object | An empty object |\n| success | Boolean | Indicates whether the request was successful |\n| status | Integer | The status code of the response |\n| message | String | A message indicating the result of the request |\n\nThe status code 422 indicates that the request was unable to be processed due to invalid input data.\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "address": "আপনার ঠিকানা।",
                  "googleMapLocation": {
                    "latitude": "34.0522N",
                    "longitude": "118.2437W"
                  },
                  "mobile": "01711112233",
                  "phone": "01711112233",
                  "email": "email@yourdomain.com",
                  "website": "http://www.real.discount.com"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "get": {
        "tags": [
          "api > v1 > website > contact"
        ],
        "summary": "contact",
        "description": "\nThis endpoint allows developers to retrieve information about a website.\n\n#### Request Parameters\n\nThere are no request parameters for this endpoint.\n\n#### Response Fields\n\nIn the event of a successful request, the response will contain a 'data' array with the website information. Each website object will contain the following fields:\n\n| Parameter | Type | Description |\n| --- | --- | --- |\n| id | String | Unique identifier of the website |\n| name | String | Name of the website |\n| slogan | String | Slogan of the website |\n| contact | Object | Contact information for the website |\n| socialMediaLinks | Object | Social media links for the website |\n| officialLinks | Array | Array of official links for the website |\n| importantInformationLinks | Array | Array of important information links for the website |\n| createdAt | String | Timestamp of when the website was created |\n\nThe response will also contain the following fields:\n\n| Parameter | Type | Description |\n| --- | --- | --- |\n| success | Boolean | Indicates if the request was successful |\n| status | Integer | Status code of the response |\n| message | String | Additional message related to the response |\n\nIn the event of an error, the response will contain an 'error' object with a 'message' field describing the error.\n",
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "put": {
        "tags": [
          "api > v1 > website > contact"
        ],
        "summary": "contact",
        "description": "\nThis endpoint allows developers to update the website information.\n\n#### Request Parameters\n\nThe request body should contain a JSON object with the following fields:\n\n| Parameter | Type | Description |\n| --- | --- | --- |\n| name | String | The name of the website |\n| slogan | String | The slogan of the website |\n| contact | Object | An object containing contact information for the website |\n| socialMediaLinks | Object | An object containing social media links for the website |\n| officialLinks | Array | An array of objects containing official links for the website |\n| importantInformationLinks | Array | An array of objects containing important information links for the website |\n| createdAt | String | The creation date of the website |\n| modifiedAt | String | The last modification date of the website |\n\n#### Response Fields\n\nIn the event of a successful request, the response will contain the following fields:\n\n| Parameter | Type | Description |\n| --- | --- | --- |\n| data | Object | An object containing the updated website information |\n| success | Boolean | Indicates whether the request was successful or not |\n| status | Integer | The status code of the response |\n| message | String | A message associated with the response |\n\nNote: The 'data' field contains the updated website information. The other fields are metadata about the response.\n\nIn the event of an error, the response will contain an 'error' object with a 'message' field describing the error.\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "address": "আপনার ঠিকানা। SDHYSUHDUSHDUH",
                  "googleMapLocation": {
                    "latitude": "34.0522N",
                    "longitude": "118.2437W"
                  },
                  "mobile": "+8901711112233",
                  "phone": "01711112233",
                  "email": "email@yourdomain.com",
                  "website": "https://www.yourdomain.com"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "delete": {
        "tags": [
          "api > v1 > website > contact"
        ],
        "summary": "contact",
        "description": "\nThis endpoint allows developers to delete a website.\n\n#### Response Fields\n\nIn the event of a successful request, the response will contain the following fields:\n\n| Field | Type | Description |\n| --- | --- | --- |\n| data | Object | An empty object |\n| success | Boolean | Indicates if the request was successful |\n| status | Integer | Status code of the request |\n| message | String | A message associated with the request |\n\n",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/api/{API_VERSION}/website/importantInformationLink": {
      "post": {
        "tags": [
          "api > v1 > website > importantInformationLink"
        ],
        "summary": "importantInformationLink",
        "description": "\nThis endpoint allows developers to create a new website.\n\n#### Request Parameters\n\nThe request must include a JSON object in the request body. The JSON object should have the following properties:\n\n| Parameter | Type | Description |\n| --- | --- | --- |\n| name | String | The name of the website |\n| url | String | The URL of the website |\n| description | String | A description of the website |\n\n#### Response Fields\n\nIn the event of a successful request, the response will contain the following fields:\n\n| Parameter | Type | Description |\n| --- | --- | --- |\n| data | Object | An empty object |\n| success | Boolean | Indicates whether the request was successful |\n| status | Integer | The status code of the response |\n| message | String | A message indicating the result of the request |\n\nIn the event of an error, the response will contain the following fields:\n\n| Parameter | Type | Description |\n| --- | --- | --- |\n| data | Object | An empty object |\n| success | Boolean | Indicates whether the request was successful |\n| status | Integer | The status code of the response |\n| message | String | A message indicating the result of the request |\n\nThe status code 422 indicates that the request was unable to be processed due to invalid input data.\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "importantInformationLinkTitle": "মাল্টিমিডিয়া ক্লাসরুম ম্যানেজমেন্ট 2",
                  "importantInformationLink": "https://discount.app/"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "get": {
        "tags": [
          "api > v1 > website > importantInformationLink"
        ],
        "summary": "importantInformationLink",
        "description": "\nThis endpoint allows developers to retrieve information about a website.\n\n#### Request Parameters\n\nThere are no request parameters for this endpoint.\n\n#### Response Fields\n\nIn the event of a successful request, the response will contain a 'data' array with the website information. Each website object will contain the following fields:\n\n| Parameter | Type | Description |\n| --- | --- | --- |\n| id | String | Unique identifier of the website |\n| name | String | Name of the website |\n| slogan | String | Slogan of the website |\n| contact | Object | Contact information for the website |\n| socialMediaLinks | Object | Social media links for the website |\n| officialLinks | Array | Array of official links for the website |\n| importantInformationLinks | Array | Array of important information links for the website |\n| createdAt | String | Timestamp of when the website was created |\n\nThe response will also contain the following fields:\n\n| Parameter | Type | Description |\n| --- | --- | --- |\n| success | Boolean | Indicates if the request was successful |\n| status | Integer | Status code of the response |\n| message | String | Additional message related to the response |\n\nIn the event of an error, the response will contain an 'error' object with a 'message' field describing the error.\n",
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/api/{API_VERSION}/website/importantInformationLink/websiteImportantInformationLink-b98602": {
      "get": {
        "tags": [
          "api > v1 > website > importantInformationLink"
        ],
        "summary": "importantInformationLink/importantInformationLinkId",
        "description": "\nThis endpoint allows developers to retrieve information about a website.\n\n#### Request Parameters\n\nThere are no request parameters for this endpoint.\n\n#### Response Fields\n\nIn the event of a successful request, the response will contain a 'data' array with the website information. Each website object will contain the following fields:\n\n| Parameter | Type | Description |\n| --- | --- | --- |\n| id | String | Unique identifier of the website |\n| name | String | Name of the website |\n| slogan | String | Slogan of the website |\n| contact | Object | Contact information for the website |\n| socialMediaLinks | Object | Social media links for the website |\n| officialLinks | Array | Array of official links for the website |\n| importantInformationLinks | Array | Array of important information links for the website |\n| createdAt | String | Timestamp of when the website was created |\n\nThe response will also contain the following fields:\n\n| Parameter | Type | Description |\n| --- | --- | --- |\n| success | Boolean | Indicates if the request was successful |\n| status | Integer | Status code of the response |\n| message | String | Additional message related to the response |\n\nIn the event of an error, the response will contain an 'error' object with a 'message' field describing the error.\n",
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "put": {
        "tags": [
          "api > v1 > website > importantInformationLink"
        ],
        "summary": "importantInformationLink/importantInformationLinkId",
        "description": "\nThis endpoint allows developers to update the website information.\n\n#### Request Parameters\n\nThe request body should contain a JSON object with the following fields:\n\n| Parameter | Type | Description |\n| --- | --- | --- |\n| name | String | The name of the website |\n| slogan | String | The slogan of the website |\n| contact | Object | An object containing contact information for the website |\n| socialMediaLinks | Object | An object containing social media links for the website |\n| officialLinks | Array | An array of objects containing official links for the website |\n| importantInformationLinks | Array | An array of objects containing important information links for the website |\n| createdAt | String | The creation date of the website |\n| modifiedAt | String | The last modification date of the website |\n\n#### Response Fields\n\nIn the event of a successful request, the response will contain the following fields:\n\n| Parameter | Type | Description |\n| --- | --- | --- |\n| data | Object | An object containing the updated website information |\n| success | Boolean | Indicates whether the request was successful or not |\n| status | Integer | The status code of the response |\n| message | String | A message associated with the response |\n\nNote: The 'data' field contains the updated website information. The other fields are metadata about the response.\n\nIn the event of an error, the response will contain an 'error' object with a 'message' field describing the error.\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "importantInformationLinkTitle": "মাল্টিমিডিয়া ক্লাসরুম ম্যানেজমেন্ট 2",
                  "importantInformationLink": "https://discount.app/"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "delete": {
        "tags": [
          "api > v1 > website > importantInformationLink"
        ],
        "summary": "importantInformationLink/importantInformationLinkId",
        "description": "\nThis endpoint allows developers to delete a website.\n\n#### Response Fields\n\nIn the event of a successful request, the response will contain the following fields:\n\n| Field | Type | Description |\n| --- | --- | --- |\n| data | Object | An empty object |\n| success | Boolean | Indicates if the request was successful |\n| status | Integer | Status code of the request |\n| message | String | A message associated with the request |\n\n",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/api/{API_VERSION}/website/officialLink": {
      "post": {
        "tags": [
          "api > v1 > website > officialLink"
        ],
        "summary": "officialLink",
        "description": "\nThis endpoint allows developers to create a new website.\n\n#### Request Parameters\n\nThe request must include a JSON object in the request body. The JSON object should have the following properties:\n\n| Parameter | Type | Description |\n| --- | --- | --- |\n| name | String | The name of the website |\n| url | String | The URL of the website |\n| description | String | A description of the website |\n\n#### Response Fields\n\nIn the event of a successful request, the response will contain the following fields:\n\n| Parameter | Type | Description |\n| --- | --- | --- |\n| data | Object | An empty object |\n| success | Boolean | Indicates whether the request was successful |\n| status | Integer | The status code of the response |\n| message | String | A message indicating the result of the request |\n\nIn the event of an error, the response will contain the following fields:\n\n| Parameter | Type | Description |\n| --- | --- | --- |\n| data | Object | An empty object |\n| success | Boolean | Indicates whether the request was successful |\n| status | Integer | The status code of the response |\n| message | String | A message indicating the result of the request |\n\nThe status code 422 indicates that the request was unable to be processed due to invalid input data.\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "officialLinkTitle": "সেকায়েপ",
                  "officialLink": "https://discount.app/"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "get": {
        "tags": [
          "api > v1 > website > officialLink"
        ],
        "summary": "officialLink",
        "description": "\nThis endpoint allows developers to retrieve information about a website.\n\n#### Request Parameters\n\nThere are no request parameters for this endpoint.\n\n#### Response Fields\n\nIn the event of a successful request, the response will contain a 'data' array with the website information. Each website object will contain the following fields:\n\n| Parameter | Type | Description |\n| --- | --- | --- |\n| id | String | Unique identifier of the website |\n| name | String | Name of the website |\n| slogan | String | Slogan of the website |\n| contact | Object | Contact information for the website |\n| socialMediaLinks | Object | Social media links for the website |\n| officialLinks | Array | Array of official links for the website |\n| importantInformationLinks | Array | Array of important information links for the website |\n| createdAt | String | Timestamp of when the website was created |\n\nThe response will also contain the following fields:\n\n| Parameter | Type | Description |\n| --- | --- | --- |\n| success | Boolean | Indicates if the request was successful |\n| status | Integer | Status code of the response |\n| message | String | Additional message related to the response |\n\nIn the event of an error, the response will contain an 'error' object with a 'message' field describing the error.\n",
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/api/{API_VERSION}/website/officialLink/websiteOfficialLink-af5eb3": {
      "get": {
        "tags": [
          "api > v1 > website > officialLink"
        ],
        "summary": "officialLink:/officialLinkId",
        "description": "\nThis endpoint allows developers to update the website information.\n\n#### Request Parameters\n\nThe request body should contain a JSON object with the following fields:\n\n| Parameter | Type | Description |\n| --- | --- | --- |\n| name | String | The name of the website |\n| slogan | String | The slogan of the website |\n| contact | Object | An object containing contact information for the website |\n| socialMediaLinks | Object | An object containing social media links for the website |\n| officialLinks | Array | An array of objects containing official links for the website |\n| importantInformationLinks | Array | An array of objects containing important information links for the website |\n| createdAt | String | The creation date of the website |\n| modifiedAt | String | The last modification date of the website |\n\n#### Response Fields\n\nIn the event of a successful request, the response will contain the following fields:\n\n| Parameter | Type | Description |\n| --- | --- | --- |\n| data | Object | An object containing the updated website information |\n| success | Boolean | Indicates whether the request was successful or not |\n| status | Integer | The status code of the response |\n| message | String | A message associated with the response |\n\nNote: The 'data' field contains the updated website information. The other fields are metadata about the response.\n\nIn the event of an error, the response will contain an 'error' object with a 'message' field describing the error.\n",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "put": {
        "tags": [
          "api > v1 > website > officialLink"
        ],
        "summary": "officialLink:/officialLinkId",
        "description": "\nThis endpoint allows developers to update the website information.\n\n#### Request Parameters\n\nThe request body should contain a JSON object with the following fields:\n\n| Parameter | Type | Description |\n| --- | --- | --- |\n| name | String | The name of the website |\n| slogan | String | The slogan of the website |\n| contact | Object | An object containing contact information for the website |\n| socialMediaLinks | Object | An object containing social media links for the website |\n| officialLinks | Array | An array of objects containing official links for the website |\n| importantInformationLinks | Array | An array of objects containing important information links for the website |\n| createdAt | String | The creation date of the website |\n| modifiedAt | String | The last modification date of the website |\n\n#### Response Fields\n\nIn the event of a successful request, the response will contain the following fields:\n\n| Parameter | Type | Description |\n| --- | --- | --- |\n| data | Object | An object containing the updated website information |\n| success | Boolean | Indicates whether the request was successful or not |\n| status | Integer | The status code of the response |\n| message | String | A message associated with the response |\n\nNote: The 'data' field contains the updated website information. The other fields are metadata about the response.\n\nIn the event of an error, the response will contain an 'error' object with a 'message' field describing the error.\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "officialLinkTitle": "সেকায়েপ",
                  "officialLink": "https://discount.app/"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "delete": {
        "tags": [
          "api > v1 > website > officialLink"
        ],
        "summary": "officialLink:/officialLinkId",
        "description": "\nThis endpoint allows developers to delete a website.\n\n#### Response Fields\n\nIn the event of a successful request, the response will contain the following fields:\n\n| Field | Type | Description |\n| --- | --- | --- |\n| data | Object | An empty object |\n| success | Boolean | Indicates if the request was successful |\n| status | Integer | Status code of the request |\n| message | String | A message associated with the request |\n\n",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/api/{API_VERSION}/website/socialMediaLink": {
      "post": {
        "tags": [
          "api > v1 > website > socialMediaLink"
        ],
        "summary": "socialMediaLink",
        "description": "\nThis endpoint allows developers to create a new website.\n\n#### Request Parameters\n\nThe request must include a JSON object in the request body. The JSON object should have the following properties:\n\n| Parameter | Type | Description |\n| --- | --- | --- |\n| name | String | The name of the website |\n| url | String | The URL of the website |\n| description | String | A description of the website |\n\n#### Response Fields\n\nIn the event of a successful request, the response will contain the following fields:\n\n| Parameter | Type | Description |\n| --- | --- | --- |\n| data | Object | An empty object |\n| success | Boolean | Indicates whether the request was successful |\n| status | Integer | The status code of the response |\n| message | String | A message indicating the result of the request |\n\nIn the event of an error, the response will contain the following fields:\n\n| Parameter | Type | Description |\n| --- | --- | --- |\n| data | Object | An empty object |\n| success | Boolean | Indicates whether the request was successful |\n| status | Integer | The status code of the response |\n| message | String | A message indicating the result of the request |\n\nThe status code 422 indicates that the request was unable to be processed due to invalid input data.\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "socialMediaLinkTitle": "GitHub",
                  "socialMediaLink": "https://discount.app/"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "get": {
        "tags": [
          "api > v1 > website > socialMediaLink"
        ],
        "summary": "socialMediaLink",
        "description": "\nThis endpoint allows developers to retrieve information about a website.\n\n#### Request Parameters\n\nThere are no request parameters for this endpoint.\n\n#### Response Fields\n\nIn the event of a successful request, the response will contain a 'data' array with the website information. Each website object will contain the following fields:\n\n| Parameter | Type | Description |\n| --- | --- | --- |\n| id | String | Unique identifier of the website |\n| name | String | Name of the website |\n| slogan | String | Slogan of the website |\n| contact | Object | Contact information for the website |\n| socialMediaLinks | Object | Social media links for the website |\n| officialLinks | Array | Array of official links for the website |\n| importantInformationLinks | Array | Array of important information links for the website |\n| createdAt | String | Timestamp of when the website was created |\n\nThe response will also contain the following fields:\n\n| Parameter | Type | Description |\n| --- | --- | --- |\n| success | Boolean | Indicates if the request was successful |\n| status | Integer | Status code of the response |\n| message | String | Additional message related to the response |\n\nIn the event of an error, the response will contain an 'error' object with a 'message' field describing the error.\n",
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/api/{API_VERSION}/website/socialMediaLink/websiteSocialMediaLink-dc2d33": {
      "get": {
        "tags": [
          "api > v1 > website > socialMediaLink"
        ],
        "summary": "socialMediaLink/socialMediaLinkId",
        "description": "\nThis endpoint allows developers to update the website information.\n\n#### Request Parameters\n\nThe request body should contain a JSON object with the following fields:\n\n| Parameter | Type | Description |\n| --- | --- | --- |\n| name | String | The name of the website |\n| slogan | String | The slogan of the website |\n| contact | Object | An object containing contact information for the website |\n| socialMediaLinks | Object | An object containing social media links for the website |\n| officialLinks | Array | An array of objects containing official links for the website |\n| importantInformationLinks | Array | An array of objects containing important information links for the website |\n| createdAt | String | The creation date of the website |\n| modifiedAt | String | The last modification date of the website |\n\n#### Response Fields\n\nIn the event of a successful request, the response will contain the following fields:\n\n| Parameter | Type | Description |\n| --- | --- | --- |\n| data | Object | An object containing the updated website information |\n| success | Boolean | Indicates whether the request was successful or not |\n| status | Integer | The status code of the response |\n| message | String | A message associated with the response |\n\nNote: The 'data' field contains the updated website information. The other fields are metadata about the response.\n\nIn the event of an error, the response will contain an 'error' object with a 'message' field describing the error.\n",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "put": {
        "tags": [
          "api > v1 > website > socialMediaLink"
        ],
        "summary": "socialMediaLink/socialMediaLinkId",
        "description": "\nThis endpoint allows developers to update the website information.\n\n#### Request Parameters\n\nThe request body should contain a JSON object with the following fields:\n\n| Parameter | Type | Description |\n| --- | --- | --- |\n| name | String | The name of the website |\n| slogan | String | The slogan of the website |\n| contact | Object | An object containing contact information for the website |\n| socialMediaLinks | Object | An object containing social media links for the website |\n| officialLinks | Array | An array of objects containing official links for the website |\n| importantInformationLinks | Array | An array of objects containing important information links for the website |\n| createdAt | String | The creation date of the website |\n| modifiedAt | String | The last modification date of the website |\n\n#### Response Fields\n\nIn the event of a successful request, the response will contain the following fields:\n\n| Parameter | Type | Description |\n| --- | --- | --- |\n| data | Object | An object containing the updated website information |\n| success | Boolean | Indicates whether the request was successful or not |\n| status | Integer | The status code of the response |\n| message | String | A message associated with the response |\n\nNote: The 'data' field contains the updated website information. The other fields are metadata about the response.\n\nIn the event of an error, the response will contain an 'error' object with a 'message' field describing the error.\n",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "example": {
                  "socialMediaLinkTitle": "GitHub 2",
                  "socialMediaLink": "https://discount.app/"
                }
              }
            }
          }
        },
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      },
      "delete": {
        "tags": [
          "api > v1 > website > socialMediaLink"
        ],
        "summary": "socialMediaLink/socialMediaLinkId",
        "description": "\nThis endpoint allows developers to delete a website.\n\n#### Response Fields\n\nIn the event of a successful request, the response will contain the following fields:\n\n| Field | Type | Description |\n| --- | --- | --- |\n| data | Object | An empty object |\n| success | Boolean | Indicates if the request was successful |\n| status | Integer | Status code of the request |\n| message | String | A message associated with the request |\n\n",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "API_VERSION",
            "in": "path",
            "schema": {
              "type": "string"
            },
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/": {
      "get": {
        "tags": [
          "index"
        ],
        "summary": "index",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/status/health": {
      "get": {
        "tags": [
          "status > health"
        ],
        "summary": "health",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/status": {
      "get": {
        "tags": [
          "status > status"
        ],
        "summary": "status",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/test-uncaught-exception": {
      "get": {
        "tags": [
          "test-uncaught-exception"
        ],
        "summary": "test-uncaught-exception",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    },
    "/undefined": {
      "get": {
        "tags": [
          "undefined"
        ],
        "summary": "undefined",
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {}
            }
          }
        }
      }
    }
  }
}