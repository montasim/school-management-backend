generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Level {
  id          String   @id // unique identifier without default
  name        String   @unique
  createdBy   String   // ID or username of the admin who created the level
  createdAt   DateTime @default(now())
  modifiedBy  String?  // ID or username of the admin who last modified the level
  modifiedAt  DateTime? // Timestamp of the last modification
}

model Category {
  id            String      @id // unique identifier without default
  name          String      @unique
  createdBy     String      // ID or username of the admin who created the level
  createdAt     DateTime    @default(now())
  modifiedBy    String?     // ID or username of the admin who last modified the level
  modifiedAt    DateTime?   // Timestamp of the last modification

  // Relation to Administration through the join table
  administration AdministrationOnCategories[]

  @@map("category") // Optional: maps to the "category" table in the database
}

model Administration {
  id            String                  @id // unique identifier without default
  name          String
  designation   String
  fileId        String?                  // File ID for uploaded file (nullable)
  downloadLink  String?                  // Link to download the file (nullable)
  shareableLink String?                  // Shareable link for the file (nullable)
  createdBy     String                   // ID of the user who created this entry
  createdAt     DateTime                 @default(now())
  modifiedBy    String?                  // ID of the user who last modified this entry (nullable)
  modifiedAt    DateTime?                // Timestamp of the last modification (nullable)

  // Relation to Category through the join table
  category      AdministrationOnCategories[]

  @@map("administration") // Optional: maps to the "administration" table in the database
}

// Join table for many-to-many relationship between Administration and Category
model AdministrationOnCategories {
  administrationId String
  categoryId       String
  administration   Administration @relation(fields: [administrationId], references: [id])
  category         Category       @relation(fields: [categoryId], references: [id])

  @@id([administrationId, categoryId]) // Composite primary key
}

model AdmissionForm {
  id            String                  @id // unique identifier without default
  title          String
  fileName       String   @unique               // File name, should be unique
  fileId         String?                        // ID for the file in storage (nullable)
  shareableLink  String?                        // Link to share the file (nullable)
  downloadLink   String?                        // Link to download the file (nullable)
  createdBy      String                         // ID of the user who created this entry
  createdAt      DateTime @default(now())       // Timestamp of creation
  modifiedBy     String?                        // ID of the user who last modified this entry (nullable)
  modifiedAt     DateTime?                      // Timestamp of last modification (nullable)

  @@map("admission_form") // Optional: Maps to "admission_form" table in the database
}

model AdmissionInformation {
  id                   String                  @id // unique identifier without default
  title                String
  description          String?    @db.Text // Allows longer text for description
  formPrice            String?
  admissionFee         String?
  lastFormSubmissionData DateTime?
  contact              String?
  createdBy            String    // ID of the user who created this entry
  createdAt            DateTime  @default(now()) // Timestamp of creation
  modifiedBy           String?   // ID of the user who last modified this entry
  modifiedAt           DateTime? // Timestamp of last modification

  @@map("admission_information") // Optional: Maps to "admission_information" table in the database
}

model Announcement {
  id          String    @id @default(uuid()) // Unique identifier
  name        String?    @db.Text // Allows longer text for description
  createdBy   String    // ID of the user who created this announcement
  createdAt   DateTime  @default(now()) // Timestamp of creation
  modifiedBy  String?   // ID of the user who last modified this entry (nullable)
  modifiedAt  DateTime? // Timestamp of last modification (nullable)

  @@map("announcement") // Optional: maps to "announcement" table in the database
}


